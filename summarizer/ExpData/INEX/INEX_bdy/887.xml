

The Apple Newton, or simply Newton, is the iPhone's predecessor and was an early line of personal digital assistants developed and marketed by Apple Computer (now Apple Inc.) from 1993 to 1998. Some electronic engineering and the manufacture of the Newton was done in Japan by Sharp. The original Newtons were based on the ARM 610 RISC processor and featured handwriting recognition software. Apple's official name for the device was "MessagePad"; the term "Newton" was Apple's name for the operating system it used (Newton OS), but popular usage of the word Newton has grown to include the device and its software together. The name is an allusion to Isaac Newton's apple.

The Newton project was not originally intended to produce a PDA. The PDA category did not exist for most of Newton's genesis, and the "personal digital assistant" term itself was coined relatively late in the development cycle by Apple's then-CEO John Sculley, the driving force behind the project. Newton was intended to be a complete reinvention of personal computing.  For most of its design lifecycle Newton had a large-format screen, more internal memory, and an object-oriented graphics kernel. One of the original motivating use cases for the design was known as the "Architect Scenario", in which Newton's designers imagined a residential architect working quickly with a client to sketch, clean up, and interactively modify a simple two-dimensional home plan.

For a portion of the Newton's development cycle (roughly the middle third), the project's intended programming language was Dylan though in fact the language and environment never matured enough for any applications to be successfully written. Dylan was a small, efficient object-oriented Lisp variant that still retains some interest. Although it was efficient (for its day, and considering its substantial run-time dynamism), Dylan never lived up to its developers' performance expectations and was a tough sell for a development team unaccustomed to Lisp programming. When the move was made to a smaller form factor (designed by Jonathan Ive),   Dylan was relegated to experimental status in the "Bauhaus Project" and eventually canceled outright. Its replacement, NewtonScript which had garbage collection, tight integration with the "soup" storage and user-interface toolkit, and was specifically designed to run in small RAM/large ROM environments.

The project missed its original goals to reinvent personal computing, and then to rewrite contemporary application programming. The Newton project fell victim to project slippage, scope creep, and a growing fear that it would interfere with Macintosh sales. It was reinvented as a PDA which would be a complementary Macintosh peripheral instead of a stand-alone computer which might compete with the Macintosh.

The Newton was pre-loaded with a variety of software to aid in personal data organization and management.  This included such applications as Notes, Names, and Dates, as well as a variety of productivity tools such as a calculator, conversion calculators (metric conversions, currency conversions, etc), time-zone maps, etc.  In later versions of the Newton OS these applications were refined, and new ones were added, such as the Works word processor and the Newton Internet Enabler, as well as the inclusion of bundled 3rd party applications, such as the QuickFigure Works spreadsheet (a "lite" version of Pelicanware's QuickFigure Pro), Pocket Quicken, the NetHopper web browser, and the EnRoute email client.  Various Newton applications had full import/export capabilities with popular desktop office suite and PIM (Personal Information Manager) application file formats, primarily by making use of Apple's bundled Newton Connection Utilities.

The Notes application allowed users to create small documents that could contain text that had been typed, or that had been recognized from handwriting, as well as free-hand sketches, "Shapes", and "ink text".

 In version 2 of the Newton OS, the Notes application (as well as Names) could accept what Apple termed "stationary", 3rd-party created plug-in modules that could extend the functionality of the basic applications.

One of the new types of Notes stationery added to Newton OS 2.0 was a hierarchical, bullet-ed, collapsible, multi-line "Checklist", an implementation of outliner software.  This could be used for organizing thoughts, priorities, "to do" lists, planning steps and sub-tasks, etc.  Each bullet point could contain as many lines of text as desired.  A bullet point could be dragged and placed underneath another bullet point, thus forming a hierarchical outline/tree.  When a bullet point was dragged, the entire sub-tree of child bullet points underneath it (if any) would be dragged along as well.  If a bullet point had child bullet points, tapping the hollow parent bullet point once would "roll up" or collapse all the children ("windowshade" effect).  The parent bullet point would become a solid black circle and all the children would disappear.  Tapping the parent bullet point again would make the children re-appear.

The Names application was used for storing contacts.  Contacts created either on the Newton or on a Windows or Macintosh desktop PIM could be synchronized to each other.    Entering a date in Names for fields such as birthday or anniversary automatically created corresponding repeating events in the Dates application.  Each contact had an attached free-form notes field available to it, that could contain any mix of interleaved text, ink text, Shapes, or Sketches.  Like Notes, Names could be extended by developers, to create special new categories of contacts with specialized pre-defined fields.  Names shipped with 3 types of contacts, "people", "companies", and "groups", but a developer could define new types, for instance "client", "patient", etc.

Dates supplied calendar, events, meeting, and alarms functions, including an integrated "to do" list manager.  It offered many different display and navigation styles, including a list view, graphical day "time blocking" view, or a week, month, or year grid.  As with Names, Dates items created either on the Newton or on a Windows or Macintosh desktop PIM could be synchronized to each other.

With the 1xx series, an optional keyboard became available, which can also be used via the dongle on a 2x00.

The MessagePad 2x00 can be used with the screen turned horizontally ("landscape") as well as vertically ("portrait"). A change of a setting instantly rotates the contents of the display by 90, 180 or 270 degrees. Handwriting recognition still works properly with the display rotated.

In initial versions (Newton OS 1.x) the Newton's handwriting recognition gave extremely mixed results for users and was often inaccurate.  The original handwriting recognition engine was called Calligrapher, and was licensed from a Russian company called Paragraph International.  Calligrapher's design was quite sophisticated; it attempted to learn the user's natural handwriting, using a database of known words to make guesses as to what the user was writing, and could interpret writing anywhere on the screen, whether hand-printed, in cursive, or a mix of the two. By contrast, Palm Pilot's Graffiti had a less sophisticated design than Calligrapher, but was more accurate and precise due to its reliance on a fixed, predefined stroke alphabet. The stroke alphabet used letter shapes which resembled standard handwriting, but which were modified to be both simple and very easy to differentiate. 

For editing text, Newton had an intuitive system for handwritten editing, such as scratching out words to be deleted, circling text to be selected, or using written carets to mark inserts. 

Later releases of the Newton operating system retained the original recognizer for compatibility, but added a hand-printed-text-only (not cursive) recognizer, code-named "Rosetta", which was developed by Apple, included in version 2.0 of the Newton operating system, and refined in Newton 2.1. Rosetta is generally considered a significant improvement and many reviewers, testers, and users consider the Newton 2.1 handwriting recognition software better than any of the alternatives even 10 years after it was introduced.   Recognition and computation of handwritten horizontal and vertical formulas such as "1 + 2 =" was also under development but never released.

A critical feature of the Newton handwriting recognition system is the modeless error correction. That is, correction done in situ without using a separate window or widget, using a minimum of gestures. If a word is recognized improperly, the user could double-tap the word and a list of alternatives would pop up in a menu under the stylus. Most of the time, the correct word will be in the list. If not, a button at the bottom of the list allows the user to edit individual characters in that word. Other pen gestures could do such things as transpose letters (also in situ).  The correction popup also allowed the user to revert to the original, un-recognized letter shapes - this would be useful in note-taking scenarios if there was insufficient time to make corrections immediately. To conserve memory and storage space, alternative recognition hypotheses would not be saved indefinitely. If you returned to a note a week later, for example, you would only see the best match. Error correction in many current handwriting systems provides such functionality but adds more steps to the process, greatly increasing the interruption to a user's workflow that a given correction requires.

Text could also be entered by tapping with the stylus on a small on-screen pop-up QWERTY virtual keyboard.  Newton could also accept free-hand "Sketches", "Shapes", and "ink text", much like a desktop computer graphics tablet.  With "Shapes", Newton could recognize that the user was attempting to draw a circle, a line, a polygon, etc, and it would clean them up into "perfect" vector representations (with modifiable control points and defined vertices) of what the user was attempting to draw.  "Shapes" and "Sketches" could be scaled or deformed once drawn.  "Ink text" captured the user's free-hand writing but allowed it to be treated somewhat like recognized text when manipulating for later editing purposes ("ink text" supported word wrap, could be formatted to be bold, italic, etc).  At any time a user could also direct the Newton to recognize selected "ink text" and turn it into recognized text (deferred recognition).  A Newton Note document (or the notes attached to each contact in Names and each calendar event) could contain any mix of interleaved text, ink text, Shapes, and Sketches.

The Newton OS consists of three layers. At the lowest level, a microkernel handles resources like tasks and memory. On top of the microkernel, the bulk of the operating system is implemented in C++, including the communications layer, handwriting recognition, and the NewtonScript environment. The top layer consists of built-in and user installed applications written in NewtonScript.

NewtonScript is an advanced object-oriented programming language, developed by Apple employee Walter Smith .  Some programmers complained at the $1000 cost of the Toolbox programming environment (later in the life of the Newton, the programming environment was made available free of charge). Additionally, it required learning a new way of programming. Despite this, many third party and shareware applications are available for Newton.

The Newton Toolkit (NTK), an integrated environment tailored to the graphical nature of the Newton, was developed specifically for developing applications for the Newton and included a graphical view editor, a template browser, and an interactive inspector. Initially, it was only available for Macs, and later a Windows version was developed. The Technical Lead for the Newton Toolkit was Norberto Menendez; other engineers on the team were: Ben Sharpe and Peter Potrebic.

Data in Newton is stored in object-oriented databases known as soups. One of the innovative aspects of Newton is that soups are available to all programs; and programs can operate cross-soup; meaning that the calendar can refer to names in the address book; a note in the notepad can be converted to an appointment, and so forth; and the soups can be programmer-extended—a new address book enhancement can be built on the data from the existing address book.

While the soup concept works well within the Newton system itself, it causes several issues. First, it makes it difficult to synchronize data with other systems, like a desktop Macintosh or PC since the data stored in soups does not correspond well with such file based systems. Apple's utility to perform this task, the Newton Connection Utility, was complex and was never completed to perform to the satisfaction of most users. The realization that a hand held computer needs to work within the existing data environment of its users was key to the success of the later Palm Pilot platform. Difficulty in working and sharing data with other systems was a key contributor to Newton's demise.

The second consequence of the data-object soup is that objects can extend built-in applications such as the address book so seamlessly that Newton users can not distinguish which program or add-on object is responsible for the various features on their own system. A user rebuilding their system after extended usage might find themselves unable to manually restore their system to the same functionality because some long-forgotten downloaded extension was missing. Data owned and used by applications and extensions themselves is tossed in the "Storage" area of the "Extras" drawer. There is no built-in distinction between types of data in that area. For example, an installed application's icon could be sitting right next to a database of addresses used by another installed extension further down the list.

Finally, the data soup concept works well for data like addresses, which benefit from being shared cross-functionally, but it works poorly for discrete data sets like files and documents. Later, the 2.0 release of the Newton OS introduced Virtual Binary Objects to alleviate the problem of handling large data objects.

Several software utilities which accommodate data transfer to and from a host system exist for the following platforms:



See Apple Newton Software --&amp;gt; Backup for further details.

Earlier MessagePads use Macintosh-standard serial ports—round Mini-DIN 8 connectors instead of the more common trapezoidal DE-9, commonly called DB-9. The 2000/2100 models have a proprietary small flat connector, called an InterConnect port, used with an adapter. In addition, all models have infrared connectivity, initially only the Sharp ASK protocol, later IrDA. Unlike the Palm, all MessagePad models are equipped with a standard PC Card expansion slot (two on the 2000/2100). This allows native modem and even Ethernet connectivity; Newton users have also written drivers for 802.11b wireless networking cards and ATA-type flash memory cards (including the popular CompactFlash format), as well as for Bluetooth cards. Newton can also dial a phone number through the MessagePad speaker by simply holding a telephone handset up to the speaker, and fax support is built in at the operating system level, although it requires external cards or a small serial Apple modem powered by AA batteries.

As with the contemporary early-model PI-series Sharp Zaurus PDAs in Japan, the MessagePad and MessagePad 100 used AAA batteries.  The early Zaurus used 2 AAA batteries, whereas the MessagePad and MessagePad 100 used 4 AAA batteries.  However, even with twice as many batteries, AAA batteries proved to be an inadequate power source for the consumption needs of the Newton.

The use of 4 AA NiCd (MessagePad 110, 120 and 130) and 4x AA NiMH cells (2x00 series, eMate 300) give a runtime of up to 30 hours (MP 2100 with two 20 MB linear Flash memory PC Cards, no backlight usage) and up to 24 hours with backlight on. While adding more weight to the Newtons than AAA batteries or custom battery packs, the choice of an easily replaceable/rechargeable cell format gives the user a still unsurpassed runtime and flexibility of power supply. This, together with the Flash memory used as internal storage (if all cells lost their power, no data was lost due to the non-volatility of this storage), gave birth to the slogan "Newton never dies, it only gets new batteries".

The MessagePad 2000 and 2100, with a vastly improved handwriting recognition system, 162 MHz StrongARM SA-110 RISC processor, Newton 2.1 OS, and a better, clearer, backlit screen, attracted critical plaudits. Although their size and expense were factors which kept them from being as popular as later Palm OS devices, the Newton still has a small but passionate user base.



Main article: eMate 300The eMate 300 was a Newton device in a laptop form factor offered to schools in 1997 as an inexpensive ($799 US, originally sold to education markets only) and durable computer for classroom use. However, in order to achieve its low price, the eMate 300 did not have all the speed and features of the contemporary MessagePad equivalent, the MessagePad 2000. The eMate was cancelled along with the rest of the Newton line.

Many prototypes of additional Newton models were spotted. Most notable was a Newton tablet or "slate", a large, flat screen that could be written on. Others included a "Kids Newton" with side handgrips and buttons, "VideoPads" which would have incorporated a video camera and screen on their flip-top covers for two-way communications, the "Mini 2000" which would have been very similar to Palm Pilot, and the "NewtonPhone" (developed by Siemens AG) which incorporated a handset and a keyboard.

Apple and third parties marketed several "wallets" (cases) for the MessagePads, which would hold them securely along with the owner's credit cards, driver's license, business cards, and cash. These wallets were even larger than the MessagePads and even less able to fit in a pocket, so they were most often used as a protective case for the unit to shield it from bumps and scratches.  Some cases included a metal or plastic shield inside the fabric to protect the glass LCD screen.  The MessagePad has a receiver in the middle back to accept a pin that was mounted on the case.  This allowed the Newton to be held by the case without the use of adhesives or straps.

Although the Apple Newton was produced for six years, it was never as successful in the marketplace as Apple had hoped. This has been attributed to two primary reasons: the Newton's high price (which went up to $1000 when models 2000 and 2100 were introduced), and its large size (it failed the "pocket test" by not fitting in an average coat, shirt, or trouser pocket).

The MessagePad and MessagePad 100 were also limited by the very short lifetime of their inadequate AAA batteries.

Critics also panned the handwriting recognition, trumpeted in the Newton's marketing campaign, available in the debut models, and it was this problem that was skewered in the Doonesbury comic strips and the animated television series The Simpsons. Although the handwriting recognition was greatly improved in later models, these initial problems marred Newton's reputation in the eyes of the public, and PDAs would remain a niche product until Palm, Inc.'s Palm Pilot, which emerged shortly before the Newton was discontinued. The Palm Pilot, with its smaller, thinner shape, lower cost, excellent PC synchronization, and more robust Graffiti handwriting recognition system—which had been available first as a software package for the Newton—managed to restore the viability of the PDA market after Newton's commercial failure.  Palm Computing was co-founded by ex-Apple employee Donna Dubinsky.

Another factor which limited the Newton's appeal was that desktop connectivity was not included in the basic retail package.  Desktop computer synchronization hardware and software had to be purchased separately adding to the expense of the basic package.

Later versions (OS 2.x) offered excellent handwriting recognition and modeless access to error correction, quite possibly a leading reason for the continued popularity of the device among Newton users.  Even given the age of the hardware and software, Newtons still demand a sale price on the used market far greater than that of comparatively aged PDAs produced by other companies. As of 2004 the Newton 2000 and 2100 could still fetch a price, without accessories, of over $100. In 2006 CNET compared a Newton Message Pad 2000 to a Samsung Q1, and the Newton was declared better

Before the Newton project was canceled, it was "spun off" into an Apple wholly owned subsidiary  company, Newton Inc., but was reabsorbed several months later when Steve Jobs ousted Apple CEO Gil Amelio and resumed control of Apple. Two ex-Apple Newton developers founded Pixo, the company that created the iPod's OS.

Speculation continued for several years that Apple might release a new PDA with some Newton technology or collaborate with Palm.  Feeding a bit of speculation, Apple put the "Print Recognizer" part of the Newton 2.1 handwriting recognition system into Mac OS X version 10.2 (known as "Jaguar"). It can be used with graphics tablets to seamlessly input handwritten printed text anywhere there was an insertion point on the screen. This technology, known as "Inkwell", appears in the System Preferences whenever a tablet input device is plugged in. Whether Apple will ever extensively utilize such technology again in a handheld device remains to be seen. However, in the iPhone 2.0 software release, Apple has incorporated Chinese character recognition, when drawn with a finger. An Easter egg in Print Recognizer on the Newton (write "ROSETTA! ROSETTA! ROSETTA!", and the Newton will insert "ROSETTA! ROSETTA! Hey, that's me!" instead) was present in Inkwell in Mac OS 10.2 and 10.3, but seems to have been removed in 10.4. Larry Yaeger was the author of the original Rosetta recognizer on the Newton, and was also responsible for porting it to Mac OS X. The Rosetta name was later used for Apple's PowerPC emulation layer for Intel-based Macs.

At an All Things Digital conference in 2004, Steve Jobs made reference to a new "Apple PDA" (likely a successor to the Newton) which the company had developed but had decided not to bring to market.

The Apple iPhone, announced by Steve Jobs at Macworld on 9 January 2007, was described by one blogger as "surprisingly close to what a current-generation Newton might look like if Jobs hadn't killed the line in 1997".  Many of the iPhone's icons are reminiscent of the Newton 2x00 soft icons at the bottom of the screen.

Since 2004, the Einstein Project has been working on emulating the Newton for use as an alternate OS on other platforms.  It is currently available for the Sharp Zaurus, Apple's Mac OS X, Nokia 770 and N800, and the  3.  The emulator is an open source project, but requires an original Newton ROM to be installed in order to function.

A possible Newton revival has been a common source of speculation among the Macintosh user base; when patents for a tablet based Macintosh were applied for , rumor sites jumped at the possibility of a new Tablet PC style Macintosh. Also, the Apple iPhone and iPod Touch have PDA functions, touchscreen navigation, Chinese character handwriting recognition, and could therefore be considered a successor to the Newton.

See also: Note(*): The eMate 300 actually has ROM Chips silked screened with 2.2 on them. Stephanie Mak on her website discusses this. http://www.felesmagus.com/newton/otheremate.html So if you remove ALL patches to the eMate 300 NOS you will end up with an NOS of 2.2.00-0 which is documented in photo located here. 

See also: 

The Newton OS was also licensed to a number of third party developers including Sharp and Motorola who developed additional PDA devices that used the operating system. Motorola added wireless connectivity to the unit, and renamed it the Marco. 

There were a number of projects that used the Newton as a portable information device in cultural settings such as museums. For example, Visible Interactive created a walking tour in San Francisco's Chinatown but the most significant effort took place in Malaysia at the Petronas Discovery Center, known as Petrosains. 

In 1995, an exhibit design firm, DMCD Inc., was awarded the contract to design a new 100,000 square foot (9300 m²) science museum in the Petronas Towers in Kuala Lumpur. A major factor in the award was the concept that visitors would use a Newton to access additional information, find out where they were in the museum, listen to audio, see animations, control robots and other media, and to bookmark information for printout at the end of the exhibit.

The device became known as the ARIF, a Malay word for "wise man" or "seer" and it was also an acronym for A Resourceful Informative Friend. Some 400 ARIFS were installed and over 300 are still in use today.  The development of the ARIF system was extremely complex and required a team of hardware and software engineers, designers, and writers. ARIF is an ancestor of the PDA systems used in museums today and it boasted features that have not been attempted since.











NewtonScript Programming: NewtonScript is the native programming language for all MessagePads

MessagePad 2100 &amp; 2000 Assembly Language Programming:



