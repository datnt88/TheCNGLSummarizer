<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by CLiX/Wiki2XML [MPI-Inf, MMCI@UdS] $LastChangedRevision: 92 $ on 16.04.2009 18:01:56[mciao0825] -->
<!DOCTYPE article SYSTEM "../article.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
<skilled_worker  confidence="0.8" wordnetid="110605985">
<physical_entity  confidence="0.8" wordnetid="100001930">
<person  confidence="0.8" wordnetid="100007846">
<editor  confidence="0.8" wordnetid="110044879">
<entity  confidence="0.9511911446218017" wordnetid="100001740">
<worker  confidence="0.8" wordnetid="109632518">
<causal_agent  confidence="0.8" wordnetid="100007347">
<header>
<title>Vile (editor)</title>
<id>1038167</id>
<revision>
<id>225854882</id>
<timestamp>2008-07-15T18:37:39Z</timestamp>
<contributor>
<username>Ghettoblaster</username>
<id>6603820</id>
</contributor>
</revision>
<categories>
<category>OpenVMS text editors</category>
<category>Termcap</category>
<category>Free text editors</category>
<category>Emacs</category>
<category>Terminfo</category>
<category>Ncurses</category>
<category>Curses-based software</category>
<category>Windows text editors</category>
<category>Unix text editors</category>
</categories>
</header>
<bdy>
<template>
<name>Infobox Software</name>
<parameters>
<genre>
<link xlink:type="simple" xlink:href="../310/30310.xml">
Text editor</link></genre>
<website>
<weblink xlink:type="simple" xlink:href="http://invisible-island.net/vile/">
invisible-island.net/vile/</weblink></website>
<latest_release_version>
9.7</latest_release_version>
<developer>
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/1466491.xml">
Thomas Dickey</link></causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
</developer>
<name>
vile</name>
<latest_release_date>
2008-06-14; 306 days ago</latest_release_date>
<license>
<link xlink:type="simple" xlink:href="../683/18938683.xml">
GNU General Public License</link></license>
<operating_system>
<platform wordnetid="103961939" confidence="0.8">
<artifact wordnetid="100021939" confidence="0.8">
<surface wordnetid="104362025" confidence="0.8">
<horizontal_surface wordnetid="103536348" confidence="0.8">
<link xlink:type="simple" xlink:href="../193/81193.xml">
Cross-platform</link></horizontal_surface>
</surface>
</artifact>
</platform>
</operating_system>
</parameters>
</template>

<p>

<b>vile</b> is a <link xlink:type="simple" xlink:href="../310/30310.xml">
text editor</link> that attempts to combine the best aspects of the popular <skilled_worker wordnetid="110605985" confidence="0.8">
<physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<editor wordnetid="110044879" confidence="0.8">
<worker wordnetid="109632518" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../234/18933234.xml">
Emacs</link></causal_agent>
</worker>
</editor>
</person>
</physical_entity>
</skilled_worker>
 and <link xlink:type="simple" xlink:href="../494/32494.xml">
vi</link> editors. These editors are traditionally located on opposing sides of the <link>
editor wars</link>, as users of Emacs and vi tend to have strong sentiments against the editor they do not use; however, vile at least attempts to reconcile these positions. </p>
<p>

<it>vile</it> is an acronym which stands for "<b>VI</b> <b>L</b>ike <b>E</b>macs".  vile is featured in Chapter 12 of the O'Reilly book "Learning the vi Editor".<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%221%22])">1</ref>
The program is also known as <b>xvile</b><ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%222%22])">2</ref> for the <link xlink:type="simple" xlink:href="../147/34147.xml">
X Window</link> System, and as <b>winvile</b> for <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link>.</p>
<p>

vile was created and originally maintained by Paul Fox. In <link xlink:type="simple" xlink:href="../636/34636.xml">
1996</link>, maintenance was taken over by <physical_entity wordnetid="100001930" confidence="0.8">
<person wordnetid="100007846" confidence="0.8">
<computer_user wordnetid="109951274" confidence="0.8">
<programmer wordnetid="110481268" confidence="0.8">
<engineer wordnetid="109615807" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../491/1466491.xml">
Thomas Dickey</link></causal_agent>
</engineer>
</programmer>
</computer_user>
</person>
</physical_entity>
<ref xlink:type="simple" xlink:href="#xpointer(//reflist/entry[@id=%223%22])">3</ref>, who had provided many major contributions to the codebase over the preceding years.</p>

<sec>
<st>
Learning to use vile</st>
<p>

<image location="right" width="150px" src="Vile-in-terminal.png" type="thumb">
<caption>

Example of [Buffer List], a dynamic window updated as a buffer is modified.
</caption>
</image>

<image location="right" width="150px" src="winvile-with-help.png" type="thumb">
<caption>

winvile and online help focusing on differences from vi.
</caption>
</image>

Historically, vile's <link xlink:type="simple" xlink:href="../430/164430.xml">
documentation</link> has focused on differences from vi. This is in contrast to the other common vi-clones (<link xlink:type="simple" xlink:href="../207/1765207.xml">
elvis</link>, <link xlink:type="simple" xlink:href="../661/949661.xml">
nvi</link> and <link xlink:type="simple" xlink:href="../478/32478.xml">
vim</link>), which have combined their respective extensions with the original vi documentation.</p>
<p>

vile's documentation is three parts:
<list>
<entry level="1" type="bullet">

 the online help file (type <it>:h</it>)</entry>
<entry level="1" type="bullet">

 specialized topics such as the macro language (text files)</entry>
<entry level="1" type="bullet">

 built-in documentation.</entry>
<entry level="2" type="bullet">

 tables of commands and other data</entry>
<entry level="2" type="bullet">

 dynamic windows showing register contents, mode-settings, etc.</entry>
</list>
</p>
<p>

vile is built from a combination of hand-crafted code and tables processed by a special-purpose program. The predefined information from the tables can be rendered in various ways, including showing the available <link xlink:type="simple" xlink:href="../461/215461.xml">
commands</link>, providing name-completion, etc. In other flavors of <it>vi</it>, the analogous tables are not distinct from the hand-crafted code.</p>
<p>

In other <it>vi</it> flavors, the information shown is static, requiring interaction from the user to make it update. In vile, however, this information is dynamicâ€”it updates these special windows as changes are made to the features they render, e.g., the list of all buffers in memory, the mode-settings corresponding to the buffer which has focus, etc.</p>
<p>

While many (not all) of vile's features are now found in other vi-compatible editors, some of the most powerful were implemented before widespread adoption in the others.
For example, multiple windows were early features in vile (and xvi) from the start. The same applies to reading from pipes, complex fences. Some of this is brought out in the O'Reilly book, though no careful study has been made of the way in which features are adopted and adapted across the <it>vi</it> and <it>emacs</it> variants.</p>

</sec>
<sec>
<st>
Features and improvements over <it>vi''</it></st>
<p>

<list>
<entry level="1" type="bullet">

 Multi-window/multi-buffer editing</entry>
<entry level="1" type="bullet">

 Multi-level <idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<property wordnetid="105849040" confidence="0.8">
<feature wordnetid="105849789" confidence="0.8">
<link xlink:type="simple" xlink:href="../996/1724996.xml">
undo/redo</link></feature>
</property>
</concept>
</idea>
</entry>
<entry level="1" type="bullet">

 Multi-platform with native features rather than in a <family wordnetid="108078020" confidence="0.8">
<link xlink:type="simple" xlink:href="../642/31642.xml">
Unix</link></family>
-compatible environment</entry>
<entry level="1" type="bullet">

 Reads a buffer from <link xlink:type="simple" xlink:href="../067/220067.xml">
standard input</link> or from <link xlink:type="simple" xlink:href="../117/1236117.xml">
piped</link> external commands</entry>
<entry level="1" type="bullet">

 Error-expression parsing jumps to the line producing compile-errors, <link xlink:type="simple" xlink:href="../642/46642.xml">
grep</link> matches, etc.</entry>
<entry level="1" type="bullet">

 Dynamic window updates</entry>
<entry level="1" type="bullet">

 <link xlink:type="simple" xlink:href="../524/29524.xml">
Scripting language</link></entry>
<entry level="1" type="bullet">

 Many <it>mode</it> settings, globally, per-buffer, per-window</entry>
<entry level="1" type="bullet">

 <technique wordnetid="105665146" confidence="0.8">
<idea wordnetid="105833840" confidence="0.8">
<concept wordnetid="105835747" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<property wordnetid="105849040" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<feature wordnetid="105849789" confidence="0.8">
<link xlink:type="simple" xlink:href="../079/265079.xml">
Color-syntax highlighting</link></feature>
</method>
</property>
</know-how>
</concept>
</idea>
</technique>
 for each majormode (88 as of version 9.7).</entry>
<entry level="1" type="bullet">

 <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../640/925640.xml">
Command-completion</link></method>
</know-how>
</technique>
</entry>
<entry level="1" type="bullet">

 Selection-highlighting using keyboard or mouse.</entry>
<entry level="1" type="bullet">

 <it>Complex fence</it> feature enables the user to step through if/then/else statements</entry>
<entry level="1" type="bullet">

 Extended <link xlink:type="simple" xlink:href="../717/25717.xml">
regular expression</link>s using both <standard wordnetid="107260623" confidence="0.8">
<system_of_measurement wordnetid="113577171" confidence="0.8">
<link xlink:type="simple" xlink:href="../305/23305.xml">
POSIX</link></system_of_measurement>
</standard>
 and <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl</link></programming_language>
 features.</entry>
</list>
</p>

</sec>
<sec>
<st>
Differences from <it>vi''</it></st>
<p>

<list>
<entry level="1" type="bullet">

 No real <link xlink:type="simple" xlink:href="../855/1591855.xml">
ex</link> mode, though most <it>ex</it> commands are recognized</entry>
<entry level="1" type="bullet">

 Command-completion and underlying long command-names make it impossibile to be 100% vi-compatible.</entry>
</list>
</p>

</sec>
<sec>
<st>
Features (detailed)</st>

<ss1>
<st>
Command completion</st>
<p>

vile supports command completion for several elements of a command: the command-name, file-name, directory-name, and mode values.</p>

</ss1>
<ss1>
<st>
Major modes</st>
<p>

Both vi and emacs have <technique wordnetid="105665146" confidence="0.8">
<know-how wordnetid="105616786" confidence="0.8">
<method wordnetid="105660268" confidence="0.8">
<link xlink:type="simple" xlink:href="../336/2311336.xml">
modes</link></method>
</know-how>
</technique>
, which are settings which affect the behavior of the program.  vile extends the <link xlink:type="simple" xlink:href="../494/32494.xml">
vi</link> modes such as <it>list</it>, <it>number</it>, etc., by providing three levels of mode: <it>global</it>, <it>buffer</it> and <it>window</it>.  The <it>buffer</it> modes are associated with the buffer contents, e.g., line-terminators, read-only attributes.  All of those modes are predefined.  vile can be customized by defining <it>majormodes</it>, which combine specific settings of the <it>buffer</it> modes with an association to the file type.  These <it>majormodes</it> have as well special modes such as the association with a specific <it>syntax filter</it>.</p>

</ss1>
<ss1>
<st>
Syntax highlighting</st>
<p>

vile performs syntax highlighting by running a <it>syntax filter</it> program which parses the buffer contents.  Initially this was a separate program.  However, to improve performance and avoid display problems, these syntax filters usually are compiled into the editor.  Most of the syntax filters are implemented with <link xlink:type="simple" xlink:href="../985/105985.xml">
lex</link> (preferably <artifact wordnetid="100021939" confidence="0.8">
<instrumentality wordnetid="103575240" confidence="0.8">
<tool wordnetid="104451818" confidence="0.8">
<apparatus wordnetid="102727825" confidence="0.8">
<generator wordnetid="103434188" confidence="0.8">
<implement wordnetid="103563967" confidence="0.8">
<equipment wordnetid="103294048" confidence="0.8">
<link xlink:type="simple" xlink:href="../795/376795.xml">
flex</link></equipment>
</implement>
</generator>
</apparatus>
</tool>
</instrumentality>
</artifact>
), with the remainder in <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../021/6021.xml">
C</link></programming_language>
 to address irregular grammars such as <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl</link></programming_language>
 and <physical_entity wordnetid="100001930" confidence="0.8">
<causal_agent wordnetid="100007347" confidence="0.8">
<link xlink:type="simple" xlink:href="../768/25768.xml">
Ruby</link></causal_agent>
</physical_entity>
.  All of the syntax filters follow the same design:
<list>
<entry level="1" type="bullet">

 read from an external file the color- and video-attribute information into a <link xlink:type="simple" xlink:href="../833/13833.xml">
chained hash table</link>,</entry>
<entry level="1" type="bullet">

 parse the file according to the <link xlink:type="simple" xlink:href="../386/5375386.xml">
lexical rule</link>s,</entry>
<entry level="1" type="bullet">

 find the corresponding color- and video-attribute information for each lexical element, and</entry>
<entry level="1" type="bullet">

 write a <link xlink:type="simple" xlink:href="../910/18910.xml">
marked-up</link> copy of the file which is read by vile (via a pipe if the syntax filters are external programs, or via a function call if they are internal).</entry>
</list>
</p>
<p>

vile paints the markup information on top of the buffer contents using in regions delimited by line and column numbers.  The markup is not attached to the underlying buffer contents.  To update the markup as the buffer is changed requires reanalysis.  This is done automatically when the user pauses.</p>

</ss1>
</sec>
<sec>
<st>
History</st>
<p>

vile has been under continuous development since 1990.  Some highlights:</p>
<p>

<list>
<entry level="1" type="bullet">

 1990 port to <link xlink:type="simple" xlink:href="../146/8146.xml">
MS-DOS</link></entry>
<entry level="1" type="bullet">

 1991 xvile, an X11 client</entry>
<entry level="1" type="bullet">

 1992 Step through C-preprocessor #if/.../#endif statements.</entry>
<entry level="1" type="bullet">

 1993 port to <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../736/32736.xml">
OpenVMS</link></O>
</entry>
<entry level="1" type="bullet">

 1994</entry>
<entry level="2" type="bullet">

 using <link xlink:type="simple" xlink:href="../527/171527.xml">
autoconf</link> to port to Unix platforms</entry>
<entry level="2" type="bullet">

 port to <link xlink:type="simple" xlink:href="../890/18890.xml">
Microsoft Windows</link> console</entry>
<entry level="2" type="bullet">

 port to <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../409/22409.xml">
OS/2</link></O>
</entry>
<entry level="1" type="bullet">

 1995 </entry>
<entry level="2" type="bullet">

 C syntax highlighting using video attributes attached to buffer</entry>
<entry level="1" type="bullet">

 1996</entry>
<entry level="2" type="bullet">

 convert to ANSI C</entry>
<entry level="1" type="bullet">

 1997 <programming_language wordnetid="106898352" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../939/23939.xml">
Perl</link></programming_language>
 interface</entry>
<entry level="1" type="bullet">

 1998</entry>
<entry level="2" type="bullet">

 winvile, a Windows GUI client</entry>
<entry level="2" type="bullet">

 <it>majormodes</it> combine buffer attributes based on file type</entry>
<entry level="1" type="bullet">

 1999</entry>
<entry level="2" type="bullet">

 port to <link xlink:type="simple" xlink:href="../801/4801.xml">
BeOS</link></entry>
<entry level="2" type="bullet">

 combine majormodes and syntax highlighting for more than 30 languages</entry>
<entry level="2" type="bullet">

 relicense as GPLv2</entry>
<entry level="1" type="bullet">

 2000 Syntax filters can be built-in or external</entry>
<entry level="1" type="bullet">

 2001</entry>
<entry level="2" type="bullet">

 port to <O wordnetid="106832680" confidence="0.9508927676800064">
<link xlink:type="simple" xlink:href="../184/65184.xml">
QNX</link></O>
</entry>
<entry level="2" type="bullet">

 Error-stepping generalized.</entry>
<entry level="1" type="bullet">

 2002 Character-classes in regular expressions </entry>
<entry level="1" type="bullet">

 2003 Minibuffer (prompt-line) generalized as one-line editor</entry>
<entry level="1" type="bullet">

 2004 <link xlink:type="simple" xlink:href="../700/371700.xml">
Locale</link> support</entry>
<entry level="1" type="bullet">

 2005 Syntax filters can be dynamically loaded</entry>
<entry level="1" type="bullet">

 2006 Multiple scripts can be invoked via the command-line options</entry>
<entry level="1" type="bullet">

 2007 Basic <link xlink:type="simple" xlink:href="../742/31742.xml">
Unicode</link> support.</entry>
</list>
</p>

</sec>
<sec>
<st>
See also</st>

<p>

<table style="background:#f9f9f9; font-size:85%; line-height:110%; ">
<row>
<col>
 <image width="32x28px" src="Free_Software_Portal_Logo.svg">
</image>
</col>
<col style="padding:0 0.2em;">
 <b><it>
Free software&#32;portal</it></b></col>
</row>
</table>
</p>

<p>

<list>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../768/1524768.xml">
List of text editors</link></entry>
<entry level="1" type="bullet">

<link xlink:type="simple" xlink:href="../877/1524877.xml">
Comparison of text editors</link></entry>
</list>
</p>

</sec>
<sec>
<st>
References</st>

<p>

<reflist>
<entry id="1">
<weblink xlink:type="simple" xlink:href="http://www.oreilly.com/catalog/vi6/">
Linda Lamb &amp; Arnold Robbins: "Learning the vi Editor (6th Edition)", O'Reilly &amp; Associates, Inc., 1998</weblink></entry>
<entry id="2">
<weblink xlink:type="simple" xlink:href="http://www.linuxjournal.com/article/1258">
Dan Wilder, "At Last, An X-Based vi", Linux Journal, February 1997</weblink></entry>
<entry id="3">
<weblink xlink:type="simple" xlink:href="http://linuxgazette.net/issue12/updates.html">
Larry Ayers, "Updates to My Past Reviews", Linux Gazette, November 1996</weblink></entry>
</reflist>
</p>

</sec>
<sec>
<st>
External links</st>
<p>

<list>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://invisible-island.net/vile/">
vile homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://freshmeat.net/projects/vile/">
vile</weblink> on <link xlink:type="simple" xlink:href="../781/383781.xml">
freshmeat</link></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.linux.com/articles/51578">
Review: vile editor is anything but</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://linuxgazette.net/issue01to08/xvile_mar96.html">
Review: vile and Xvile</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www.oreilly.com/catalog/vi6/chapter/ch08.html">
vi Clones Feature Summary from "Learning the vi Editor (6th Edition)"</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://thomer.com/vi/vi.html">
vi Lovers Homepage</weblink></entry>
<entry level="1" type="bullet">

<weblink xlink:type="simple" xlink:href="http://www-personal.umich.edu/~knassen/vi/vi-softlinks.html">
vi Software Links</weblink></entry>
</list>
</p>


</sec>
</bdy>
</causal_agent>
</worker>
</entity>
</editor>
</person>
</physical_entity>
</skilled_worker>
</article>
